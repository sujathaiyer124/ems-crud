openapi: 3.0.3
info:
  title: Employee Management System 
  description: |-
    This is a employee management system that uses REST API to perform crud operations.
    All the operations are performed by Admin.
  contact:
    email: sujatha@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
servers:
  - url: http://localhost:8000/emp
tags:
  - name: Admin
    description: Performs the CRUD operations on employee
paths:
  /emp:
    get:
      tags:
        - Admin
      summary: Get a list of all employees
      description: This endpoint uses GET request to retrive all employees
      responses:
        '200':
          description: All the Employee details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'          
    post:
      tags:
        - Admin
      summary: Creates a new employee
      description: This endpoint creates a new employee using POST request.
      requestBody:
        description: Create a new pet in the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Employee'
        required: true
      responses:
        '200':
          description: Data added successfully
        '405':
          description: Invalid input
  /emp/{id}:
    get:
      tags:
        - Admin
      summary: Find employee by ID
      description: Returns the details of the employee by id 
      parameters:
        - name: id
          in: path
          description: ID of pet to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: All the Employee details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'          
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
    put:
      tags:
        - Admin
      summary: Update Employee using their id  
      description: Update the employee details 
      parameters:
        - name: id
          in: path
          description: ID of the employee that needs to be updated
          required: true
          schema:
            type: integer
      requestBody:
        description: Update an existent user in the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Employee'
      responses:
        default:
          description: Employee updated successfully
    
    delete:
      tags:
        - Admin
      summary: Delete Employee using their id
      description: Deletes the Employee details
      parameters:
        - name: id
          in: path
          description: The employee that needs to be deleted
          required: true
          schema:
            type: integer
      responses:
        '404':
          description: employee not found
components:
  schemas:
    Employee:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10 
        firstname:
          type: string
          example: Sujatha
        lastname:
          type: string
          example: Iyer
        email:
          type: string
          format: email
          example: JohnSmith@swaggertheband.com
        password:
          type: string
          pattern: "Password should more than 8 letters.It must contains atleast one uppercase,one lowercase,one special character,one number."
          example: Pa!hiwe2137!
        phoneno:
          type: integer
          format: int64
          example: 1234567890
        role:
          type: string
          example: admin
        salary:
          type: number
          format: float
          example: 500000.00
        